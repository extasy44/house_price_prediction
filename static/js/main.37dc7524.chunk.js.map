{"version":3,"sources":["data/suburbs.js","components/Form.js","screens/Home.js","App.js","index.js"],"names":["suburbNames","propertyTypes","propertyTypesConvert","Option","Select","formItemLayout","labelCol","span","wrapperCol","PredictionForm","setResults","setLoading","useState","disabled","setDisabled","className","Item","name","valuePropName","onClick","onFinish","values","requests","suburb","map","req","i","axios","post","setTimeout","all","then","responses","res","r","data","error","console","log","message","label","rules","required","size","mode","placeholder","value","min","max","defaultValue","marks","1","2","3","4","5","6","7","8","9","10","Group","disabld","type","Button","offset","block","style","width","marginLeft","htmlType","formatter","Intl","NumberFormat","currency","Home","results","loading","result","format","estimated_price","App","ReactDOM","render","document","getElementById"],"mappings":"oUAAaA,EAAc,CACzB,aACA,aACA,cACA,QACA,aACA,gBACA,mBACA,UACA,YACA,YACA,aACA,QACA,UACA,YACA,WACA,UACA,WACA,WACA,UACA,SACA,UACA,eACA,YACA,oBACA,UACA,eACA,WACA,SACA,UACA,YACA,YACA,eACA,SACA,gBACA,kBACA,QACA,YACA,iBACA,UACA,cACA,eACA,iBACA,WACA,WACA,cACA,gBACA,UACA,UACA,SACA,iBACA,UACA,kBACA,iBACA,gBACA,gBACA,SACA,eACA,UACA,gBACA,kBACA,aACA,UACA,WACA,YACA,cACA,aACA,aACA,aACA,QACA,cACA,iBACA,aACA,YACA,oBACA,eACA,SACA,aACA,iBACA,WACA,WACA,kBACA,oBACA,YACA,SACA,WACA,YACA,WACA,YACA,UACA,kBACA,QACA,SACA,WACA,aACA,kBACA,SACA,cACA,eACA,WACA,eACA,aACA,UACA,aACA,iBACA,cACA,aACA,YACA,kBACA,cACA,UACA,cACA,WACA,aACA,aACA,cACA,cACA,aACA,SACA,kBACA,SACA,cACA,aACA,kBACA,YACA,iBACA,eACA,aACA,cACA,eACA,UACA,cACA,kBACA,WACA,eACA,aACA,eACA,WACA,WACA,WACA,UACA,WACA,mBACA,UACA,OACA,UACA,eACA,eACA,iBACA,oBACA,SACA,gBACA,YACA,QACA,WACA,iBACA,SACA,WACA,aACA,UACA,eACA,YACA,eACA,aACA,gBACA,gBACA,eACA,aACA,WACA,YACA,UACA,eACA,YACA,iBACA,iBACA,UACA,aACA,cACA,aACA,eACA,gBACA,YACA,gBACA,eACA,SACA,gBACA,QACA,aACA,WACA,aACA,eACA,iBACA,YACA,cACA,YACA,WACA,WACA,eACA,YACA,iBACA,kBACA,YACA,gBACA,kBACA,aACA,aACA,UACA,cACA,aACA,UACA,WACA,SACA,SACA,YACA,eACA,cACA,YACA,iBACA,oBACA,iBACA,YACA,YACA,eACA,cACA,iBACA,iBACA,aACA,UACA,eACA,YACA,cACA,QACA,kBACA,cACA,cACA,YACA,YACA,gBACA,WACA,WACA,YACA,SACA,YACA,WACA,cACA,uBACA,eACA,YACA,kBACA,mBACA,YACA,gBACA,aACA,aACA,aACA,YACA,iBACA,QACA,YACA,aACA,eACA,kBACA,cACA,gBACA,qBACA,YACA,YACA,aACA,SACA,YACA,eACA,cACA,UACA,aACA,WACA,gBACA,kBACA,UACA,kBACA,eACA,cACA,eACA,gBACA,iBACA,aACA,mBACA,WACA,YACA,YACA,cACA,UACA,iBACA,UACA,SACA,aACA,mBACA,cACA,aACA,YACA,UACA,oBACA,gBACA,aACA,YACA,aACA,WACA,aACA,UACA,cACA,UACA,WACA,WACA,aACA,UACA,YACA,aACA,YACA,kBACA,WACA,eACA,aACA,SACA,aACA,kBACA,UACA,WACA,gBACA,WACA,cACA,YACA,YACA,eACA,aACA,YACA,SACA,cACA,aACA,cACA,aACA,iBACA,YACA,UACA,SACA,mBACA,kBACA,iBACA,WACA,UACA,QACA,aACA,WACA,WACA,WACA,eACA,eACA,YACA,SACA,aACA,gBACA,iBACA,aACA,eACA,QACA,WACA,gBACA,aACA,kBACA,cACA,eACA,mBACA,SACA,gBACA,WACA,cACA,QACA,UACA,YACA,WACA,gBACA,YACA,WACA,WACA,SACA,cACA,cACA,eACA,mBACA,cACA,kBACA,eACA,SACA,WACA,gBACA,YACA,YACA,aACA,SACA,cACA,YACA,UACA,UACA,cACA,kBACA,cACA,kBACA,eACA,mBACA,cACA,kBACA,mBACA,cACA,aACA,iBACA,oBACA,eACA,mBACA,mBACA,cACA,YACA,YACA,UACA,WACA,WACA,WACA,SACA,gBACA,iBACA,YACA,cACA,aACA,aACA,aACA,UACA,kBACA,WACA,aACA,UACA,UACA,aACA,YACA,oBACA,WACA,cACA,gBACA,UACA,YACA,YACA,iBACA,cACA,eACA,SACA,YACA,iBACA,WACA,cACA,eACA,aACA,cACA,cACA,WACA,WACA,YACA,SACA,SACA,UACA,cACA,cACA,OACA,WACA,iBACA,WACA,YACA,UACA,eACA,cACA,UACA,kBACA,SACA,WACA,aACA,YACA,YACA,WACA,aACA,iBACA,WACA,WACA,WACA,YACA,aACA,YACA,kBACA,WACA,aACA,UACA,OACA,cACA,YACA,OACA,UACA,cACA,cACA,aACA,kBACA,WACA,SACA,cACA,UACA,cACA,aACA,eACA,kBACA,mBACA,gBACA,mBACA,uBACA,gBACA,cACA,aACA,aACA,iBACA,UACA,gBACA,gBACA,cACA,WACA,YACA,mBACA,WACA,cACA,oBACA,cACA,aACA,cACA,aACA,WACA,SACA,WACA,kBACA,UACA,WACA,cACA,UACA,QACA,iBACA,eACA,WACA,YACA,aACA,aACA,UACA,aACA,WACA,SACA,iBACA,WACA,YACA,WACA,gBACA,YACA,UACA,UACA,WACA,WACA,WACA,aACA,WACA,cACA,eACA,WACA,WACA,iBACA,UACA,cACA,qBACA,cACA,YACA,YACA,WACA,iBACA,SACA,cACA,kBACA,cACA,aACA,UACA,aACA,SACA,UACA,gBACA,WACA,gBACA,iBACA,WACA,WACA,YACA,gBACA,aACA,WACA,WACA,mBACA,UACA,WACA,aACA,cACA,cACA,UACA,YACA,WAGWC,EAAgB,CAC3B,QACA,YACA,uBACA,QACA,SAGWC,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,G,iBClmBzCC,EAAWC,IAAXD,OAEFE,EAAiB,CACrBC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KA0IPE,EArIQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EACrBC,oBAAS,GADY,mBAC9CC,EAD8C,KACpCC,EADoC,KAsBrD,OACE,qCACE,sBAAKC,UAAU,SAAf,UACE,qDACA,cAAC,IAAKC,KAAN,CAAWC,KAAK,QAAQC,cAAc,UAAtC,SACE,cAAC,IAAD,CAAQC,QAAS,kBAAML,GAAaD,WAGxC,qBAAKE,U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","file":"static/js/main.37dc7524.chunk.js","sourcesContent":["export const suburbNames = [\n  'abbotsbury',\n  'abbotsford',\n  'agnes banks',\n  'airds',\n  'alexandria',\n  'alfords point',\n  'allambie heights',\n  'allawah',\n  'ambarvale',\n  'annandale',\n  'annangrove',\n  'appin',\n  'arcadia',\n  'arncliffe',\n  'artarmon',\n  'ashbury',\n  'ashcroft',\n  'ashfield',\n  'asquith',\n  'auburn',\n  'austral',\n  'avalon beach',\n  'balgowlah',\n  'balgowlah heights',\n  'balmain',\n  'balmain east',\n  'balmoral',\n  'bangor',\n  'banksia',\n  'bankstown',\n  'bar point',\n  'barden ridge',\n  'bardia',\n  'bardwell park',\n  'bardwell valley',\n  'bargo',\n  'bass hill',\n  'baulkham hills',\n  'bayview',\n  'beacon hill',\n  'beaconsfield',\n  'beaumont hills',\n  'beecroft',\n  'belfield',\n  'bella vista',\n  'bellevue hill',\n  'belmore',\n  'belrose',\n  'berala',\n  'berkshire park',\n  'berowra',\n  'berowra heights',\n  'berowra waters',\n  'beverley park',\n  'beverly hills',\n  'bexley',\n  'bexley north',\n  'bidwill',\n  'bilgola beach',\n  'bilgola plateau',\n  'birchgrove',\n  'birrong',\n  'blackett',\n  'blacktown',\n  'blair athol',\n  'blairmount',\n  'blakehurst',\n  'bligh park',\n  'bondi',\n  'bondi beach',\n  'bondi junction',\n  'bonnet bay',\n  'bonnyrigg',\n  'bonnyrigg heights',\n  'bossley park',\n  'botany',\n  'bow bowing',\n  'bowen mountain',\n  'box hill',\n  'bradbury',\n  'breakfast point',\n  'brighton-le-sands',\n  'bringelly',\n  'bronte',\n  'brooklyn',\n  'brookvale',\n  'bundeena',\n  'burraneer',\n  'burwood',\n  'burwood heights',\n  'busby',\n  'buxton',\n  'cabarita',\n  'cabramatta',\n  'cabramatta west',\n  'camden',\n  'camden park',\n  'camden south',\n  'cammeray',\n  'campbelltown',\n  'camperdown',\n  'campsie',\n  'canada bay',\n  'canley heights',\n  'canley vale',\n  'canterbury',\n  'caringbah',\n  'caringbah south',\n  'carlingford',\n  'carlton',\n  'carnes hill',\n  'carramar',\n  'carss park',\n  'cartwright',\n  'castle cove',\n  'castle hill',\n  'castlecrag',\n  'casula',\n  'catherine field',\n  'cattai',\n  'cecil hills',\n  'cecil park',\n  'centennial park',\n  'chatswood',\n  'chatswood west',\n  'cheero point',\n  'cheltenham',\n  'cherrybrook',\n  'chester hill',\n  'chifley',\n  'chippendale',\n  'chipping norton',\n  'chiswick',\n  'church point',\n  'clareville',\n  'clemton park',\n  'clontarf',\n  'clovelly',\n  'cobbitty',\n  'colebee',\n  'collaroy',\n  'collaroy plateau',\n  'colyton',\n  'como',\n  'concord',\n  'concord west',\n  'condell park',\n  'connells point',\n  'constitution hill',\n  'coogee',\n  'cottage point',\n  'couridjah',\n  'cowan',\n  'cremorne',\n  'cremorne point',\n  'cromer',\n  'cronulla',\n  'crows nest',\n  'croydon',\n  'croydon park',\n  'curl curl',\n  'currans hill',\n  'daceyville',\n  'dangar island',\n  'darling point',\n  'darlinghurst',\n  'darlington',\n  'davidson',\n  'dean park',\n  'dee why',\n  'denham court',\n  'denistone',\n  'denistone east',\n  'denistone west',\n  'dharruk',\n  'dolans bay',\n  'dolls point',\n  'double bay',\n  'douglas park',\n  'dover heights',\n  'drummoyne',\n  'duffys forest',\n  'dulwich hill',\n  'dundas',\n  'dundas valley',\n  'dural',\n  'eagle vale',\n  'earlwood',\n  'east hills',\n  'east killara',\n  'east lindfield',\n  'east ryde',\n  'eastgardens',\n  'eastlakes',\n  'eastwood',\n  'ebenezer',\n  'edensor park',\n  'edgecliff',\n  'edmondson park',\n  'elanora heights',\n  'elderslie',\n  'elizabeth bay',\n  'elizabeth hills',\n  'ellis lane',\n  'elvina bay',\n  'emerton',\n  'emu heights',\n  'emu plains',\n  'enfield',\n  'engadine',\n  'enmore',\n  'epping',\n  'ermington',\n  'erskineville',\n  'eschol park',\n  'fairfield',\n  'fairfield east',\n  'fairfield heights',\n  'fairfield west',\n  'fairlight',\n  'five dock',\n  'forest lodge',\n  'forestville',\n  'freemans reach',\n  'frenchs forest',\n  'freshwater',\n  'galston',\n  'georges hall',\n  'girraween',\n  'gladesville',\n  'glebe',\n  'gledswood hills',\n  'glen alpine',\n  'glendenning',\n  'glenfield',\n  'glenhaven',\n  'glenmore park',\n  'glenorie',\n  'glenwood',\n  'glossodia',\n  'gordon',\n  'granville',\n  'grasmere',\n  'grays point',\n  'great mackerel beach',\n  'green valley',\n  'greenacre',\n  'greenfield park',\n  'greenhills beach',\n  'greenwich',\n  'gregory hills',\n  'greystanes',\n  'grose vale',\n  'grose wold',\n  'guildford',\n  'guildford west',\n  'gymea',\n  'gymea bay',\n  'haberfield',\n  'hammondville',\n  'harrington park',\n  'harris park',\n  'hassall grove',\n  'hawkesbury heights',\n  'heathcote',\n  'hebersham',\n  'heckenberg',\n  'henley',\n  'hillsdale',\n  'hinchinbrook',\n  'hobartville',\n  'holroyd',\n  'holsworthy',\n  'homebush',\n  'homebush west',\n  'horningsea park',\n  'hornsby',\n  'hornsby heights',\n  'horsley park',\n  'hoxton park',\n  'hunters hill',\n  'huntleys cove',\n  'hurlstone park',\n  'hurstville',\n  'hurstville grove',\n  'illawong',\n  'ingleburn',\n  'ingleside',\n  'jamisontown',\n  'jannali',\n  'kangaroo point',\n  'kareela',\n  'kearns',\n  'kellyville',\n  'kellyville ridge',\n  'kemps creek',\n  'kensington',\n  'kenthurst',\n  'killara',\n  'killarney heights',\n  'kings langley',\n  'kings park',\n  'kingsford',\n  'kingsgrove',\n  'kirrawee',\n  'kirribilli',\n  'kogarah',\n  'kogarah bay',\n  'kurnell',\n  'kyeemagh',\n  'kyle bay',\n  'la perouse',\n  'lakemba',\n  'lakesland',\n  'lalor park',\n  'lane cove',\n  'lane cove north',\n  'lansvale',\n  'lavender bay',\n  'leichhardt',\n  'leonay',\n  'leppington',\n  'lethbridge park',\n  'leumeah',\n  'lewisham',\n  'liberty grove',\n  'lidcombe',\n  'lilli pilli',\n  'lilyfield',\n  'lindfield',\n  'linley point',\n  'little bay',\n  'liverpool',\n  'loftus',\n  'londonderry',\n  'long point',\n  'longueville',\n  'lovett bay',\n  'lower portland',\n  'luddenham',\n  'lugarno',\n  'lurnea',\n  'macquarie fields',\n  'macquarie links',\n  'macquarie park',\n  'maianbar',\n  'malabar',\n  'manly',\n  'manly vale',\n  'maraylya',\n  'marayong',\n  'maroubra',\n  'marrickville',\n  'marsden park',\n  'marsfield',\n  'mascot',\n  'matraville',\n  'mcgraths hill',\n  'mcmahons point',\n  'meadowbank',\n  'melrose park',\n  'menai',\n  'menangle',\n  'menangle park',\n  'merrylands',\n  'merrylands west',\n  'middle cove',\n  'middle dural',\n  'middleton grange',\n  'miller',\n  'millers point',\n  'milperra',\n  'minchinbury',\n  'minto',\n  'miranda',\n  'mona vale',\n  'monterey',\n  'mooney mooney',\n  'moorebank',\n  'mortdale',\n  'mortlake',\n  'mosman',\n  'mount annan',\n  'mount colah',\n  'mount druitt',\n  'mount kuring-gai',\n  'mount lewis',\n  'mount pritchard',\n  'mount vernon',\n  'mulgoa',\n  'narellan',\n  'narellan vale',\n  'naremburn',\n  'narrabeen',\n  'narraweena',\n  'narwee',\n  'neutral bay',\n  'newington',\n  'newport',\n  'newtown',\n  'normanhurst',\n  'north balgowlah',\n  'north bondi',\n  'north curl curl',\n  'north epping',\n  'north kellyville',\n  'north manly',\n  'north narrabeen',\n  'north parramatta',\n  'north rocks',\n  'north ryde',\n  'north st marys',\n  'north strathfield',\n  'north sydney',\n  'north turramurra',\n  'north willoughby',\n  'northbridge',\n  'northmead',\n  'northwood',\n  'oakdale',\n  'oakhurst',\n  'oakville',\n  'oatlands',\n  'oatley',\n  'old guildford',\n  'old toongabbie',\n  'oran park',\n  'orangeville',\n  'oxley park',\n  'oyster bay',\n  'paddington',\n  'padstow',\n  'padstow heights',\n  'pagewood',\n  'palm beach',\n  'panania',\n  'parklea',\n  'parramatta',\n  'peakhurst',\n  'peakhurst heights',\n  'pemulwuy',\n  'pendle hill',\n  'pennant hills',\n  'penrith',\n  'penshurst',\n  'petersham',\n  'pheasants nest',\n  'phillip bay',\n  'picnic point',\n  'picton',\n  'pitt town',\n  'pleasure point',\n  'plumpton',\n  'point piper',\n  'port hacking',\n  'potts hill',\n  'potts point',\n  'prairiewood',\n  'prestons',\n  'prospect',\n  'punchbowl',\n  'putney',\n  'pymble',\n  'pyrmont',\n  'queens park',\n  'queenscliff',\n  'raby',\n  'ramsgate',\n  'ramsgate beach',\n  'randwick',\n  'razorback',\n  'redfern',\n  'regents park',\n  'regentville',\n  'revesby',\n  'revesby heights',\n  'rhodes',\n  'richmond',\n  'riverstone',\n  'riverview',\n  'riverwood',\n  'rockdale',\n  'rodd point',\n  'ropes crossing',\n  'rose bay',\n  'rosebery',\n  'rosehill',\n  'roselands',\n  'rosemeadow',\n  'roseville',\n  'roseville chase',\n  'rossmore',\n  'rouse hill',\n  'rozelle',\n  'ruse',\n  'russell lea',\n  'rydalmere',\n  'ryde',\n  'sadleir',\n  'sandringham',\n  'sandy point',\n  'sans souci',\n  'scotland island',\n  'seaforth',\n  'sefton',\n  'seven hills',\n  'shalvey',\n  'silverwater',\n  'smithfield',\n  'south coogee',\n  'south granville',\n  'south hurstville',\n  'south penrith',\n  'south turramurra',\n  'south wentworthville',\n  'south windsor',\n  'spring farm',\n  'springwood',\n  'st andrews',\n  'st helens park',\n  'st ives',\n  'st ives chase',\n  'st johns park',\n  'st leonards',\n  'st marys',\n  'st peters',\n  'stanhope gardens',\n  'stanmore',\n  'strathfield',\n  'strathfield south',\n  'summer hill',\n  'sun valley',\n  'surry hills',\n  'sutherland',\n  'sydenham',\n  'sydney',\n  'sylvania',\n  'sylvania waters',\n  'tahmoor',\n  'tamarama',\n  'taren point',\n  'telopea',\n  'tempe',\n  'tennyson point',\n  'terrey hills',\n  'the oaks',\n  'thirlmere',\n  'thornleigh',\n  'toongabbie',\n  'tregear',\n  'turramurra',\n  'turrella',\n  'ultimo',\n  'valley heights',\n  'vaucluse',\n  'villawood',\n  'vineyard',\n  'voyager point',\n  'wahroonga',\n  'waitara',\n  'wakeley',\n  'wallacia',\n  'wareemba',\n  'warrawee',\n  'warriewood',\n  'waterloo',\n  'watsons bay',\n  'wattle grove',\n  'waverley',\n  'waverton',\n  'wentworthville',\n  'werombi',\n  'west hoxton',\n  'west pennant hills',\n  'west pymble',\n  'west ryde',\n  'westleigh',\n  'westmead',\n  'wetherill park',\n  'whalan',\n  'whale beach',\n  'wheeler heights',\n  'wilberforce',\n  'wiley park',\n  'willmot',\n  'willoughby',\n  'wilton',\n  'windsor',\n  'windsor downs',\n  'winmalee',\n  'winston hills',\n  'wollstonecraft',\n  'woodbine',\n  'woodpark',\n  'woollahra',\n  'woolloomooloo',\n  'woolooware',\n  'woolwich',\n  'woronora',\n  'woronora heights',\n  'yagoona',\n  'yanderra',\n  'yarramundi',\n  'yarrawarrah',\n  'yellow rock',\n  'yennora',\n  'yowie bay',\n  'zetland',\n];\n\nexport const propertyTypes = [\n  'house',\n  'townhouse',\n  'duplex/semi-detached',\n  'villa',\n  'other',\n];\n\nexport const propertyTypesConvert = [2, 5, 1, 6, 3];\n","import React, { useState } from 'react';\nimport { Form, Select, Switch, Radio, Slider, Button } from 'antd';\nimport axios from 'axios';\nimport {\n  suburbNames,\n  propertyTypes,\n  propertyTypesConvert,\n} from '../data/suburbs';\nimport './Form.scss';\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst predictURL = 'http://127.0.0.1:5000/predict_home_price';\n\nconst PredictionForm = ({ setResults, setLoading }) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const onFinish = (values) => {\n    const requests = values.suburb.map((req, i) => {\n      return axios.post(predictURL, { ...values, suburb: values.suburb[i] });\n    });\n    setLoading(true);\n    setTimeout(() => {\n      try {\n        axios.all(requests).then((responses) => {\n          const res = responses.map((r) => r.data);\n          setResults(res);\n        });\n        setLoading(false);\n      } catch (error) {\n        console.log(error.message);\n        setLoading(false);\n      }\n    }, 1000);\n  };\n\n  return (\n    <>\n      <div className=\"switch\">\n        <h3>Click this to start</h3>\n        <Form.Item name=\"start\" valuePropName=\"checked\">\n          <Switch onClick={() => setDisabled(!disabled)} />\n        </Form.Item>\n      </div>\n      <div className=\"prediction-form\">\n        <Form name=\"predictionForm\" {...formItemLayout} onFinish={onFinish}>\n          <Form.Item\n            name=\"suburb\"\n            label=\"Select Suburb\"\n            rules={[\n              {\n                required: true,\n                message: 'This field is required!',\n              },\n            ]}\n          >\n            <Select\n              size=\"large\"\n              mode=\"multiple\"\n              disabled={disabled}\n              placeholder=\"Please select a suburb\"\n            >\n              {suburbNames.map((suburb) => (\n                <Option value={suburb}>{suburb}</Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"bed\"\n            label=\"No.Bedrooms\"\n            rules={[{ required: true, message: 'Please pick a type!' }]}\n          >\n            <Slider\n              min={1}\n              max={10}\n              disabled={disabled}\n              defaultValue={[1, 10]}\n              marks={{\n                1: 1,\n                2: 2,\n                3: 3,\n                4: 4,\n                5: 5,\n                6: 6,\n                7: 7,\n                8: 8,\n                9: 9,\n                10: 10,\n              }}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"bath\"\n            label=\"No.Bathrooms\"\n            rules={[{ required: true, message: 'Please pick a type!' }]}\n          >\n            <Slider\n              min={1}\n              max={10}\n              disabled={disabled}\n              defaultValue={[1, 10]}\n              marks={{\n                1: 1,\n                2: 2,\n                3: 3,\n                4: 4,\n                5: 5,\n                6: 6,\n                7: 7,\n                8: 8,\n                9: 9,\n                10: 10,\n              }}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"propType\"\n            label=\"Property Types\"\n            rules={[{ required: true, message: 'Please pick a type!' }]}\n          >\n            <Radio.Group disabld={disabled}>\n              {propertyTypes.map((type, i) => (\n                <Radio.Button value={propertyTypesConvert[i]}>\n                  {type}\n                </Radio.Button>\n              ))}\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button\n              block\n              style={{ width: 360, marginLeft: 10 }}\n              htmlType=\"submit\"\n              disabled={disabled}\n            >\n              Estimate\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default PredictionForm;\n","import React, { useState, useEffect } from 'react';\nimport { Spin } from 'antd';\nimport PredictionForm from '../components/Form';\nimport './Home.scss';\n\nvar formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nconst Home = () => {\n  const [results, setResults] = useState();\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <h1>Sydney House Price Prediction</h1>\n      </header>\n      <main className=\"content\">\n        <div className=\"form-wrapper\">\n          <PredictionForm setResults={setResults} setLoading={setLoading} />\n        </div>\n        <div className=\"result\">\n          {loading ? (\n            <Spin />\n          ) : (\n            results && (\n              <div>\n                <h4>Estimated price for selected options</h4>\n                {results.map((result) => (\n                  <div className=\"detail\">\n                    {result.data.suburb} {' : '}\n                    <span>{formatter.format(result.estimated_price)}</span>\n                  </div>\n                ))}\n              </div>\n            )\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n","import Home from './screens/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}